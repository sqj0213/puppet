#############################################################################
# Sample NRPE Config File 
# Written by: Ethan Galstad (nagios@nagios.org)
# 
# Last Modified: 11-23-2007
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# LOG FACILITY
# The syslog facility that should be used for logging purposes.

log_facility=daemon



# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.

pid_file=/var/run/nrpe/nrpe.pid



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=127.0.0.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.  
# You can either supply a username or a UID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_user=nrpe



# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.  
# You can either supply a group name or a GID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_group=nrpe



# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames 
# that are allowed to talk to the NRPE daemon.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

allowed_hosts=127.0.0.1,172.16.1.14,172.16.2.14,172.16.2.13,172.16.3.4,172.16.4.4,172.16.5.12,172.16.6.12
 


# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.  
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! *** 
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=0



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario: 
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing 
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

# command_prefix=/usr/bin/sudo 



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

include_dir=/etc/nrpe.d/



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/local/nagios/libexec
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!


# The following examples use hardcoded command arguments...

command[check_users]=/usr/lib64/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib64/nagios/plugins/check_load -w 30,20,15 -c 50,35,25
command[check_disk_/]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /
command[check_disk_/tmp]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /tmp
command[check_disk_/usr]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /usr
command[check_disk_/var]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /var
command[check_disk_/home]=/usr/lib64/nagios/plugins/check_disk -w 20% -c 10% -p /home
command[check_disk_/data]=/usr/lib64/nagios/plugins/check_disk -w 10% -c 5% -p /data
command[check_disk_/dev/shm]=sudo /usr/lib64/nagios/plugins/check_partition -p /dev/shm -w 40 -c 50 -m 180
command[check_zombie_procs]=/usr/lib64/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/usr/lib64/nagios/plugins/check_procs -w 150 -c 200 
command[check_nginx]=/usr/lib64/nagios/plugins/check_nginx -H 127.0.0.1
command[check_mysql_3306]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3306/mysql.sock
command[check_mysql_slave_io_3306]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3306/mysql.sock
command[check_mysql_slave_sql_3306]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3306/mysql.sock
command[check_mysql_replication_3306]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3306/mysql.sock
command[check_mysql_slave_delay_3306]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3306/mysql.sock
command[check_mysql_connections_3306]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3306/mysql.sock 
command[check_mysql_innodb_3306]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3306/mysql.sock 
command[check_mysql_3307]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3307/mysql.sock
command[check_mysql_slave_io_3307]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3307/mysql.sock
command[check_mysql_slave_sql_3307]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3307/mysql.sock
command[check_mysql_replication_3307]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3307/mysql.sock
command[check_mysql_slave_delay_3307]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3307/mysql.sock
command[check_mysql_connections_3307]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3307/mysql.sock
command[check_mysql_innodb_3307]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3307/mysql.sock 
command[check_mysql_3308]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3308/mysql.sock
command[check_mysql_slave_io_3308]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3308/mysql.sock
command[check_mysql_slave_sql_3308]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3308/mysql.sock
command[check_mysql_replication_3308]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3308/mysql.sock
command[check_mysql_slave_delay_3308]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3308/mysql.sock
command[check_mysql_connections_3308]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3308/mysql.sock
command[check_mysql_innodb_3308]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3308/mysql.sock 
command[check_mysql_3309]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3309/mysql.sock
command[check_mysql_slave_io_3309]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3309/mysql.sock
command[check_mysql_slave_sql_3309]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3309/mysql.sock
command[check_mysql_replication_3309]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3309/mysql.sock
command[check_mysql_slave_delay_3309]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3309/mysql.sock
command[check_mysql_connections_3309]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3309/mysql.sock
command[check_mysql_innodb_3309]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3309/mysql.sock 
command[check_mysql_3310]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3310/mysql.sock
command[check_mysql_slave_io_3310]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3310/mysql.sock
command[check_mysql_slave_sql_3310]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3310/mysql.sock
command[check_mysql_replication_3310]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3310/mysql.sock
command[check_mysql_slave_delay_3310]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3310/mysql.sock
command[check_mysql_connections_3310]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3310/mysql.sock
command[check_mysql_innodb_3310]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3310/mysql.sock
command[check_mysql_3311]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3311/mysql.sock
command[check_mysql_slave_io_3311]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3311/mysql.sock
command[check_mysql_slave_sql_3311]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3311/mysql.sock
command[check_mysql_replication_3311]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3311/mysql.sock
command[check_mysql_slave_delay_3311]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3311/mysql.sock
command[check_mysql_connections_3311]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3311/mysql.sock
command[check_mysql_innodb_3311]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3311/mysql.sock 
command[check_mysql_3312]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3312/mysql.sock
command[check_mysql_slave_io_3312]=/usr/lib64/nagios/plugins/check_mysql_slave_io -S /data/mysql_3312/mysql.sock
command[check_mysql_slave_sql_3312]=/usr/lib64/nagios/plugins/check_mysql_slave_sql -S /data/mysql_3312/mysql.sock
command[check_mysql_replication_3312]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3312/mysql.sock
command[check_mysql_slave_delay_3312]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3312/mysql.sock
command[check_mysql_connections_3312]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3312/mysql.sock
command[check_mysql_innodb_3312]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3312/mysql.sock 
command[check_mysql_3313]=/usr/lib64/nagios/plugins/check_mysql -s /data/mysql_3313/mysql.sock
command[check_mysql_replication_3313]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-running -S /data/mysql_3313/mysql.sock
command[check_mysql_slave_delay_3313]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-replication-delay -S /data/mysql_3313/mysql.sock
command[check_mysql_connections_3313]=sudo /usr/lib64/nagios/plugins/check_mysql_connections -w 80 -c 90 -S /data/mysql_3313/mysql.sock
command[check_mysql_innodb_3313]=sudo /usr/lib64/nagios/plugins/pmp-check-mysql-innodb -S /data/mysql_3313/mysql.sock 
command[check_mysql_3306_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.251
command[check_mysql_3307_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.250
command[check_mysql_3308_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.249
command[check_mysql_3309_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.248
command[check_mysql_3310_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.247
command[check_mysql_3311_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.246
command[check_mysql_3312_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.245
command[check_mysql_3313_vip]=/usr/lib64/nagios/plugins/check_vip 172.16.1.244
command[check_unix_memory]=/usr/lib64/nagios/plugins/pmp-check-unix-memory
command[check_mysql_file_privs]=/usr/lib64/nagios/plugins/pmp-check-mysql-file-privs
command[check_raid]=/usr/bin/sudo /usr/lib64/nagios/plugins/check_raid
command[check_gearman_work]=/usr/lib64/nagios/plugins/check_gearman_work.sh
command[check_procs]=/usr/lib64/nagios/plugins/check_procs -w 2:6 -c 1:20 -C python
command[check_mem]=/usr/lib64/nagios/plugins/check_mem -w 90 -c 95
command[check_nfs_server]=/usr/lib64/nagios/plugins/check_nfs_health -s
command[check_nfs_client]=/usr/lib64/nagios/plugins/check_nfs_client
command[check_partition]=/usr/lib64/nagios/plugins/check_partition -p /dev/shm -w 50 -c 60
command[check_swap]=/usr/lib64/nagios/plugins/check_swap -w 20% -c 10%
command[check_iptables]=/usr/lib64/nagios/plugins/check_iptables iptables
###monit for cache
command[check_nginx]=/usr/lib64/nagios/plugins/check_nginx -H 127.0.0.1 -P 8080
command[check_squid_8001]=/usr/lib64/nagios/plugins/check_squid -H 127.0.0.1 -P 8001 -wd 1000 -cd 500 -wh 2 -ch 1
command[check_squid_8002]=/usr/lib64/nagios/plugins/check_squid -H 127.0.0.1 -P 8002 -wd 1000 -cd 500 -wh 2 -ch 1
